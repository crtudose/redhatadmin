### Manage basic networking

1. Configure IPv4 and IPv6 addresses

    * The format of an IPv4 address is a set of 4 8-bit integers that gives a 32-bit IP address.  The format of an IPv6 is a set of 8 16-bit hexadecimal numbers that gives a 128-bit IP address.

    * The *nmcli* command is used to configure networking using the NetworkManager service. This command is used to create, display, edit, delete, activate, and deactivate network connections. Each network device corresponds to a Network Manager device.

    * Using nmcli with the connection option lists the available connection profiles in NetworkManager.

    * The *ip* command can also be used for network configuration. The main difference between ip and nmcli is that changes made with the ip command are not persistent.
    
    * To view system IP addresses:
        ```shell
        ip addr
        ```

    * To show the current connections:
        ```shell
        nmcli connection show
        ```

    * Using nmcli with the device option lists the available network devices in the system.

    * To view the current network device status and details:
        ```shell
        nmcli device status
        nmcli device show
        ```

    * To add an ethernet IPv4 connection:
        ```shell
        nmcli connection add con-name <name> ifname <name> type ethernet ip4 <address> gw4 <address>
        ```

    * To manually modify a connection:
        ```shell
        nmcli connection modify <name> ipv4.addresses <address>
        nmcli connection modify <name> ipv4.method manual
        ```

    * To delete a connection:
        ```shell
        nmcli connection delete <name>
        ```

    * To activate a connection:
        ```shell
        nmcli connection up <name>
        ```

    * To deactivate a connection:
        ```shell
        nmcli connection down <name>
        ```

    * To check the DNS servers that are being used:
        ```shell
        cat /etc/resolv.conf
        ```

    * To change the DNS server being used:
        ```shell
        nmcli con mod <name> ipv4.dns <dns>
        systemctl restart NetworkManager.service
        ```
   
1. Configure hostname resolution

    * To lookup the IP address based on a host name the *host* or *nslookup* commands can be used.

    * The `/etc/hosts` file is like a local DNS. The `/etc/nsswitch.conf` file controls the order that resources are checked for resolution. 

    * To lookup the hostname:
        ```shell
        hostname -s # short
        hostname -f # fully qualified domain name
        ```

    * The hostname file is in `/etc/hostname`. To refresh any changes run the *hostnamectl* command.

1. Configure network services to start automatically at boot

    * To install a service and make it start automatically at boot:
        ```shell
        dnf install httpd
        systemctl enable httpd
        ```
    
    * To set a connection to be enabled on boot:
        ```shell
        nmcli connection modify eth0 connection.autoconnect yes
        ```

1. Restrict network access using firewall-cmd/firewall

	* Netfilter is a framework provided by the Linux kernel that provides functions for packet filtering. In RHEL 7 and earlier iptables was the default way of configuring Netfilter. Disadvantages of ipables were that a separate version (ip6tables) was required for ipv6, and that the user interface is not very user friendly.

    * The default firewall system in RHEL 8 is *firewalld*. Firewalld is a zone-based firewall. Each zone can be associated with one or more network interfaces, and each zone can be configured to accept or deny services and ports. The *firewall-cmd* command is the command line client for firewalld.

    * To check firewall zones:
        ```shell
        firewall-cmd --get-zones
        ```

    * To list configuration for a zone:
        ```shell
        firewall-cmd --zone work --list-all
        ```

    * To create a new zone:
        ```shell
        firewall-cmd --new-zone servers --permanent
        ```

    * To reload firewall-cmd configuration:
        ```shell
        firewall-cmd --reload
        ```

    * To add a service to a zone:
        ```shell
        firewall-cmd --zone servers --add-service=ssh --permanent
        ```

    * To add an interface to a zone:
        ```shell
        firewall-cmd --change-interface=enp0s8 --zone=servers --permanent
        ```

    * To get active zones:
        ```shell
        firewall-cmd --get-active-zones
        ```

    * To set a default zone:
        ```shell
        firewall-cmd --set-default-zone=servers
        ```

    * To check the services allowed for a zone:
        ```shell
        firewall-cmd --get-services
        ```

    * To add a port to a zone:
        ```shell
        firewall-cmd --add-port 8080/tcp --permanent --zone servers
        ```

    * To remove a service from a zone:
        ```shell
        firewall-cmd --remove-service https --permanent --zone servers
        ```

    * To remove a port from a zone:
        ```shell
        firewall-cmd --remove-port 8080/tcp --permanent --zone servers
        ```
